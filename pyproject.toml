[project]
authors = [{name = "Owen Lamont", email = "owenrlamont@gmail.com"}]
dependencies = []
description = "Add a short description here"
name = "ga_img_copy"
requires-python = ">= 3.12"
version = "0.1.0"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
ga_img_copy = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.dependencies]
typer = ">=0.14.0,<0.15"
rich = ">=13.9.4,<14"
mpire = ">=2.10.2,<3"
scikit-image = ">=0.24.0,<0.25"
pillow = ">=11.0.0,<12"
numpy = ">=2.1.3,<3"
pixi-pycharm = ">=0.0.8,<0.0.9"

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

python_version = "3.12"
files = ["src"]

ignore_missing_imports = true
follow_imports = "silent"

check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
no_implicit_reexport = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
filterwarnings = [
    "error",
]
testpaths = ["tests"]

[tool.ruff]

# Same as Black.
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "lf"

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
select = [
    "A",
    "B",
    "C4",
    "D",
    "E",
    "F",
    "FURB",
    "I",
    "ISC",
    "NPY",
    "PD",
    "PT",
    "Q",
    "RET",
    "RUF",
    "SIM",
    "T20",
    "UP"
]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in __init__
    "D202", # No blank lines allowed after function docstring
    "D213", # Multi-line docstring summary should start at the second line
    "D214", # Section is over-indented
    "D215", # Section underline is over-indented
    "D400", # First line should end with a period
    "D401", # First line of docstring should be in imperative mood
    "D415", # First line should end with a period, question mark, or exclamation
    "D416", # Section name should end with a colon
    "D417", # Missing argument descriptions in the docstring
    "D418", # Function/ Method decorated with @overload shouldn't contain a docstring
    "E203", # Whitespace before ':' (fights ruff format)
    "ISC001", # Implicitly concatenated string literals on one line (fights ruff format)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = [
    "B905", # Enforce strict argument on zip - but don't autofix as strict=False
]

[tool.ruff.lint.flake8-pytest-style]
mark-parentheses = false

[tool.ruff.lint.isort]
case-sensitive = false
combine-as-imports = true
force-sort-within-sections = true
lines-after-imports = 2
order-by-type = false
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder"
]
split-on-trailing-comma=false

[tool.ruff.lint.pydocstyle]
convention = "numpy"
